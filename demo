#!/usr/bin/env python
"""Demo script on using demosaicnet for inference."""

import numpy as np
import torch as th
import skimage.io as skio

import demosaicnet


bayer = demosaicnet.BayerDemosaick()
xtrans = demosaicnet.XTransDemosaick()

# Load some ground-truth image
gt = skio.imread(demosaicnet.TEST_INPUT).astype(np.float32) / 255.0

# Network expects channel first
gt = np.transpose(gt, [2, 0, 1])
mosaicked = demosaicnet.bayer(gt)
xmosaicked = demosaicnet.xtrans(gt)

# Run the model (expects batch as first dimension)
mosaicked = th.from_numpy(mosaicked).unsqueeze(0)
xmosaicked = th.from_numpy(xmosaicked).unsqueeze(0)
with th.no_grad():  # inference only
  out = bayer(mosaicked).squeeze(0).cpu().numpy()
  out = np.clip(out, 0, 1)
  xout = xtrans(xmosaicked).squeeze(0).cpu().numpy()
  xout = np.clip(xout, 0, 1)

skio.imsave("output/bayer_mosaick.png", mosaicked.squeeze(0).permute([1, 2, 0]))
skio.imsave("output/bayer_result.png", np.transpose(out, [1, 2, 0]))
skio.imsave("output/xtrans_mosaick.png", xmosaicked.squeeze(0).permute([1, 2, 0]))
skio.imsave("output/xtrans_result.png", np.transpose(xout, [1, 2, 0]))
